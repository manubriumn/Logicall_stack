import cv2
import numpy as np
import utlis
import math
######

webcam = True
path = "resources/img5.png"
cap = cv2.VideoCapture(2)
cap.set(10, 160)
cap.set(3, 1920)
cap.set(4, 1080)
scale = 3
wP = 250 * scale
hP = 180 * scale

while True:
    success, img0 = cap.read()
    if webcam:
        img = cv2.cvtColor(img0, cv2.COLOR_BGR2GRAY)
    else:
        img = cv2.imread(path, cv2.IMREAD_GRAYSCALE)

    #utlis.getContours(img, showCanny=True)

    if not success:
        print("Failed to capture frame")
        break

    imgContours, conts = utlis.getContours(img,minArea=50000,filter=4)
    if len(conts) != 0:
        biggest = conts[0][2]
        #print(biggest)
        imgWarp = utlis.warpImg(img, biggest, wP, hP)
        imgContours2, conts2 = utlis.getContours(imgWarp, minArea=2000, filter=4, cThr=[50,50],draw=False)

        if len(conts) != 0:
            for obj in conts2:
                cv2.polylines(imgContours2,[obj[2]],True,(0,255,0),2)
                nPoints = utlis.reorder(obj[2])
                resultW = utlis.findDis(nPoints[0][0] // scale, nPoints[1][0] // scale) / 10
                rounded_resultW = math.floor(resultW * 10) / 10
                resultH = utlis.findDis(nPoints[0][0] // scale, nPoints[2][0] // scale) / 10
                rounded_resultH = math.floor(resultH * 10) / 10
                nW = rounded_resultW
                nH = rounded_resultH
                cv2.arrowedLine(imgContours2, (nPoints[0][0][0], nPoints[0][0][1]),
                                (nPoints[1][0][0], nPoints[1][0][1]),
                                (255, 0, 255), 3, 8, 0, 0.05)
                cv2.arrowedLine(imgContours2, (nPoints[0][0][0], nPoints[0][0][1]),
                                (nPoints[2][0][0], nPoints[2][0][1]),
                                (255, 0, 255), 3, 8, 0, 0.05)
                x, y, w, h = obj[3]
                cv2.putText(imgContours2, '{}cm'.format(nW), (x + 30, y - 10), cv2.FONT_HERSHEY_COMPLEX_SMALL, 1.5,
                            (255, 0, 0), 2)
                cv2.putText(imgContours2, '{}cm'.format(nH), (x - 70, y + h // 2), cv2.FONT_HERSHEY_COMPLEX_SMALL, 1.5,
                            (255, 0, 0), 2)

        cv2.imshow("warp", imgContours2)

    img = cv2.resize(img,(0,0),None,0.5,0.5)
    cv2.imshow("original", img)
    cv2.waitKey(1)

######################## CODE FOR VISION ENDS HERE  #######################
