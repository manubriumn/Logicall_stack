import customtkinter as CTK
import time
from stacking_algorithm import place as SB
# from Realsense import RealSenseImageProcessing
from download import Download as DL
from login import Login
import doosan2
import vision_check


class HUI:
    def __init__(self, Login_val):
        time.sleep(1)
        self.Login_val = Login_val
        if self.Login_val == True:
            self.Main_frame()  # comment out to skip
        else:
            exit()

    def Main_frame(self):
        while True:
            self.MainHUI_frame = CTK.CTk()
            self.MainHUI_frame.geometry(f"{1920 - 960}x{1080 / 2}")
            CTK.set_appearance_mode("dark")
            CTK.set_default_color_theme("dark-blue")

            Box_stack = CTK.CTkLabel(master=self.MainHUI_frame, text="Box Stacking", font=("Arial", 40))
            Box_stack.pack(pady=5, padx=150)
            Box_stack.place(x=50, y=30)

            Logout_button = CTK.CTkButton(master=self.MainHUI_frame,
                                          text="Log out",
                                          font=("Arial", 18),
                                          command=self.Logout)
            Logout_button.pack(pady=20, padx=40)
            Logout_button.place(x=1350, y=50)

            if self.Login_val == False:
                quit()

            Start_button = CTK.CTkButton(master=self.MainHUI_frame,
                                         text="start",
                                         width=550,
                                         height=100,
                                         fg_color="green",
                                         font=("Arial", 50),
                                         command= doosan2.run
                                         )
            Start_button.pack(pady=20, padx=100), Start_button.place(x=500, y=50)

            Vision_button = CTK.CTkButton(master=self.MainHUI_frame,
                                          text="Vision",
                                          width=250,
                                          height=100,
                                          font=("Arial", 50),
                                          command=vision_check.run_vision)
            Vision_button.pack(pady=20, padx=100), Vision_button.place(x=500, y=175)

            Download_button = CTK.CTkButton(master=self.MainHUI_frame,
                                            text="Download",
                                            width=250,
                                            height=100,
                                            font=("Arial", 50),
                                            command=self.Download)
            Download_button.pack(pady=20, padx=100), Download_button.place(x=800, y=175)

            Update_button = CTK.CTkButton(master=self.MainHUI_frame,
                                          text="Update",
                                          width=50,
                                          height=50,
                                          font=("Arial", 18),
                                          command=self.Box_counts and self.Box_display(Name="",
                                                                                       master=self.MainHUI_frame,
                                                                                       Pallet=0))
            Update_button.pack(pady=20, padx=100), Update_button.place(x=10, y=350)

            self.Box_counts()
            self.Box_display("Small", self.MainHUI_frame, 0)
            self.Box_display("medium", self.MainHUI_frame, 1)
            self.Box_display("Large", self.MainHUI_frame, 2)
            self.Box_display("Extra large", self.MainHUI_frame, 3)

            MainHUI = self.MainHUI_frame.mainloop()
            return MainHUI

    def Box_display(self, Name, master, Pallet: int):
        master = master
        Label = CTK.CTkLabel(master=master, text=f"{Name} box", font=("Arial", 26))
        Label.pack(pady=0, padx=10)
        Label.place(x=10, y=50 * Pallet + 100)
        Palleter = CTK.CTkLabel(master=master, text=f"{None}", font=("Arial", 26))
        Palleter.pack(pady=0, padx=10)
        Palleter.place(x=300, y=50 * Pallet + 100)
        print(self.Box_counts())
        if self.Box_counts == any:
            Val = self.Box_counts()
            print(Val)
            Palleter.configure(text=Val[Pallet])
        return Label, Palleter

    def Logout(self):
        self.MainHUI_frame.destroy()
        self.Login_val = False
        return self.Login_val

    def Download(self):
        print("Download started")
        Download = DL
        Download.__init__

    # def start_button_callback(self):
    #     self.MainHUI_frame.destroy()
    #     image_processor = ""#ImageProcessing(path="resources/img5.png", webcam=False)
    #     image_processor.run()
    #     realSenseProcessor = RealSenseImageProcessing()
    #     realSenseProcessor.run()

    def Box_counts(self):
        return [0, 0, 0, 0]
    #     print("import")
    #     return self.Box


if __name__ == '__main__':
    HUI(Login_val=Login)
